import com.android.build.OutputFile
import plugin.KiwixConfigurationPlugin

plugins {
  id("com.android.application")
  id("com.github.triplet.play") version("2.4.1")
}
apply plugin: KiwixConfigurationPlugin

apply from: rootProject.file("jacoco.gradle")

ext {
  versionMajor = 3
  versionMinor = 0
  versionPatch = 4
}

private String generateVersionName() {
  "${ext.versionMajor}.${ext.versionMinor}.${ext.versionPatch}"
}

/*
* max version code: 21-0-0-00-00-00
* our template    : UU-D-A-ZZ-YY-XX
* where:
* X = patch version
* Y = minor version
* Z = major version (+ 20 to distinguish from previous, non semantic, versions of the app)
* A = number representing ABI split
* D = number representing density split
* U = unused
*/

private Integer generateVersionCode() {
  20 * 10000 +
    (ext.versionMajor * 10000) +
    (ext.versionMinor * 100) +
    (ext.versionPatch)
}

def buildNumber = System.getenv('TRAVIS_BUILD_NUMBER') ?: "dev"

android {

  defaultConfig {
    archivesBaseName = "$buildNumber"
    resValue "string", "app_name", "Kiwix"
    resValue "string", "app_search_string", "Search Kiwix"
    versionCode generateVersionCode()
    versionName generateVersionName()
  }

  signingConfigs {
    release {
      storeFile file("../kiwix-android.keystore")
      storePassword System.getenv("KEY_STORE_PASSWORD") ?: "000000"
      keyAlias System.getenv("KEY_ALIAS") ?: "keystore"
      keyPassword System.getenv("KEY_PASSWORD") ?: "000000"
    }
  }

  buildTypes {

    debug {
      multiDexKeepProguard file("multidex-instrumentation-config.pro")
      buildConfigField "boolean", "KIWIX_ERROR_ACTIVITY", "false"
    }

    release {
      minifyEnabled true
      shrinkResources true
      proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
      signingConfig signingConfigs.release
      buildConfigField "boolean", "KIWIX_ERROR_ACTIVITY", "true"
    }
  }

  def abiCodes = ['arm64-v8a': 6, 'x86': 3, 'x86_64': 4, 'armeabi-v7a': 5]
  def densityCodes = ['mdpi': 2, 'hdpi': 3, 'xhdpi': 4, 'xxhdpi': 5, 'xxxhdpi': 6]
  splits {
    density {
      enable false
      reset()
      include "mdpi", "hdpi", "xhdpi", "xxhdpi", "xxxhdpi"
    }
  }
  applicationVariants.all { variant ->
    variant.outputs.each { output ->
      def baseAbiVersionCode = abiCodes.get(output.getFilter(OutputFile.ABI)) ?: 0
      def baseDensityVersionCode = densityCodes.get(output.getFilter(OutputFile.DENSITY)) ?: 0
      output.versionCodeOverride =
        (baseDensityVersionCode * 10000000) +
          (baseAbiVersionCode * 1000000) +
          variant.versionCode
    }
  }

  sourceSets {
    androidTest {
      java.srcDirs += "$rootDir/core/src/sharedTestFunctions/java"
    }
  }
}

play {
  enabled = true
  serviceAccountCredentials = file("../google.json")
  track = "alpha"
  releaseStatus = "draft"
  resolutionStrategy = "fail"
}

dependencies {
  implementation(Libs.squidb)
  implementation(Libs.squidb_annotations)
  kapt(Libs.squidb_processor)
}
